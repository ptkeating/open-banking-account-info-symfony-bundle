<?php
/**
 * OBScheduledPayment3Detail
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBScheduledPayment3Detail model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBScheduledPayment3Detail 
{
        /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("AccountId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $accountId = null;

    /**
     * A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("ScheduledPaymentId")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $scheduledPaymentId = null;

    /**
     * The date on which the scheduled payment will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("ScheduledPaymentDateTime")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $scheduledPaymentDateTime = null;

    /**
     * @var OBExternalScheduleType1Code|null
     * @SerializedName("ScheduledType")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBExternalScheduleType1Code")
     * @Type("OpenAPI\Server\Model\OBExternalScheduleType1Code")
     */
    protected ?OBExternalScheduleType1Code $scheduledType = null;

    /**
     * Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor&#39;s reference or payment remittance identification should be quoted in the end-to-end transaction identification.
     *
     * @var string|null
     * @SerializedName("Reference")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 35
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $reference = null;

    /**
     * A reference value provided by the PSU to the PISP while setting up the scheduled payment.
     *
     * @var string|null
     * @SerializedName("DebtorReference")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 35
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $debtorReference = null;

    /**
     * @var OBActiveOrHistoricCurrencyAndAmount1|null
     * @SerializedName("InstructedAmount")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount1")
     * @Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount1")
     */
    protected ?OBActiveOrHistoricCurrencyAndAmount1 $instructedAmount = null;

    /**
     * @var OBBranchAndFinancialInstitutionIdentification51|null
     * @SerializedName("CreditorAgent")
     * @Assert\Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification51")
     * @Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification51")
     */
    protected ?OBBranchAndFinancialInstitutionIdentification51 $creditorAgent = null;

    /**
     * @var OBCashAccount51|null
     * @SerializedName("CreditorAccount")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBCashAccount51")
     * @Type("OpenAPI\Server\Model\OBCashAccount51")
     */
    protected ?OBCashAccount51 $creditorAccount = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountId = $data['accountId'] ?? null;
        $this->scheduledPaymentId = $data['scheduledPaymentId'] ?? null;
        $this->scheduledPaymentDateTime = $data['scheduledPaymentDateTime'] ?? null;
        $this->scheduledType = $data['scheduledType'] ?? null;
        $this->reference = $data['reference'] ?? null;
        $this->debtorReference = $data['debtorReference'] ?? null;
        $this->instructedAmount = $data['instructedAmount'] ?? null;
        $this->creditorAgent = $data['creditorAgent'] ?? null;
        $this->creditorAccount = $data['creditorAccount'] ?? null;
    }

    /**
     * Gets accountId.
     *
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets accountId.
     *
     * @param string|null $accountId  A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setAccountId(?string $accountId): self
    {
        $this->accountId = $accountId;

        return $this;
    }

    /**
     * Gets scheduledPaymentId.
     *
     * @return string|null
     */
    public function getScheduledPaymentId(): ?string
    {
        return $this->scheduledPaymentId;
    }

    /**
     * Sets scheduledPaymentId.
     *
     * @param string|null $scheduledPaymentId  A unique and immutable identifier used to identify the scheduled payment resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setScheduledPaymentId(?string $scheduledPaymentId = null): self
    {
        $this->scheduledPaymentId = $scheduledPaymentId;

        return $this;
    }

    /**
     * Gets scheduledPaymentDateTime.
     *
     * @return \DateTime|null
     */
    public function getScheduledPaymentDateTime(): ?\DateTime
    {
        return $this->scheduledPaymentDateTime;
    }

    /**
     * Sets scheduledPaymentDateTime.
     *
     * @param \DateTime|null $scheduledPaymentDateTime  The date on which the scheduled payment will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setScheduledPaymentDateTime(?\DateTime $scheduledPaymentDateTime): self
    {
        $this->scheduledPaymentDateTime = $scheduledPaymentDateTime;

        return $this;
    }

    /**
     * Gets scheduledType.
     *
     * @return OBExternalScheduleType1Code|null
     */
    public function getScheduledType(): ?OBExternalScheduleType1Code
    {
        return $this->scheduledType;
    }

    /**
     * Sets scheduledType.
     *
     * @param OBExternalScheduleType1Code|null $scheduledType
     *
     * @return $this
     */
    public function setScheduledType(?OBExternalScheduleType1Code $scheduledType): self
    {
        $this->scheduledType = $scheduledType;

        return $this;
    }

    /**
     * Gets reference.
     *
     * @return string|null
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * Sets reference.
     *
     * @param string|null $reference  Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
     *
     * @return $this
     */
    public function setReference(?string $reference = null): self
    {
        $this->reference = $reference;

        return $this;
    }

    /**
     * Gets debtorReference.
     *
     * @return string|null
     */
    public function getDebtorReference(): ?string
    {
        return $this->debtorReference;
    }

    /**
     * Sets debtorReference.
     *
     * @param string|null $debtorReference  A reference value provided by the PSU to the PISP while setting up the scheduled payment.
     *
     * @return $this
     */
    public function setDebtorReference(?string $debtorReference = null): self
    {
        $this->debtorReference = $debtorReference;

        return $this;
    }

    /**
     * Gets instructedAmount.
     *
     * @return OBActiveOrHistoricCurrencyAndAmount1|null
     */
    public function getInstructedAmount(): ?OBActiveOrHistoricCurrencyAndAmount1
    {
        return $this->instructedAmount;
    }

    /**
     * Sets instructedAmount.
     *
     * @param OBActiveOrHistoricCurrencyAndAmount1|null $instructedAmount
     *
     * @return $this
     */
    public function setInstructedAmount(?OBActiveOrHistoricCurrencyAndAmount1 $instructedAmount): self
    {
        $this->instructedAmount = $instructedAmount;

        return $this;
    }

    /**
     * Gets creditorAgent.
     *
     * @return OBBranchAndFinancialInstitutionIdentification51|null
     */
    public function getCreditorAgent(): ?OBBranchAndFinancialInstitutionIdentification51
    {
        return $this->creditorAgent;
    }

    /**
     * Sets creditorAgent.
     *
     * @param OBBranchAndFinancialInstitutionIdentification51|null $creditorAgent
     *
     * @return $this
     */
    public function setCreditorAgent(?OBBranchAndFinancialInstitutionIdentification51 $creditorAgent = null): self
    {
        $this->creditorAgent = $creditorAgent;

        return $this;
    }

    /**
     * Gets creditorAccount.
     *
     * @return OBCashAccount51|null
     */
    public function getCreditorAccount(): ?OBCashAccount51
    {
        return $this->creditorAccount;
    }

    /**
     * Sets creditorAccount.
     *
     * @param OBCashAccount51|null $creditorAccount
     *
     * @return $this
     */
    public function setCreditorAccount(?OBCashAccount51 $creditorAccount): self
    {
        $this->creditorAccount = $creditorAccount;

        return $this;
    }
}


