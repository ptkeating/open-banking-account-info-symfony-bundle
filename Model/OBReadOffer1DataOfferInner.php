<?php
/**
 * OBReadOffer1DataOfferInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBReadOffer1DataOfferInner model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBReadOffer1DataOfferInner 
{
        /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("AccountId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $accountId = null;

    /**
     * A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("OfferId")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $offerId = null;

    /**
     * Offer type, in a coded form.
     *
     * @var string|null
     * @SerializedName("OfferType")
     * @Assert\Choice({ "BalanceTransfer", "LimitIncrease", "MoneyTransfer", "Other", "PromotionalRate" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $offerType = null;

    /**
     * Further details of the offer.
     *
     * @var string|null
     * @SerializedName("Description")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 500
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $description = null;

    /**
     * Date and time at which the offer starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("StartDateTime")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $startDateTime = null;

    /**
     * Date and time at which the offer ends.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("EndDateTime")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $endDateTime = null;

    /**
     * Rate associated with the offer type.
     *
     * @var string|null
     * @SerializedName("Rate")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Regex("/^(-?\\d{1,3}){1}(\\.\\d{1,4}){0,1}$/")
     */
    protected ?string $rate = null;

    /**
     * Value associated with the offer type.
     *
     * @var int|null
     * @SerializedName("Value")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected ?int $value = null;

    /**
     * Further details of the term of the offer.
     *
     * @var string|null
     * @SerializedName("Term")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 500
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $term = null;

    /**
     * URL (Uniform Resource Locator) where documentation on the offer can be found
     *
     * @var string|null
     * @SerializedName("URL")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 256
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $uRL = null;

    /**
     * @var OBReadOffer1DataOfferInnerAmount|null
     * @SerializedName("Amount")
     * @Assert\Type("OpenAPI\Server\Model\OBReadOffer1DataOfferInnerAmount")
     * @Type("OpenAPI\Server\Model\OBReadOffer1DataOfferInnerAmount")
     */
    protected ?OBReadOffer1DataOfferInnerAmount $amount = null;

    /**
     * @var OBReadOffer1DataOfferInnerFee|null
     * @SerializedName("Fee")
     * @Assert\Type("OpenAPI\Server\Model\OBReadOffer1DataOfferInnerFee")
     * @Type("OpenAPI\Server\Model\OBReadOffer1DataOfferInnerFee")
     */
    protected ?OBReadOffer1DataOfferInnerFee $fee = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountId = $data['accountId'] ?? null;
        $this->offerId = $data['offerId'] ?? null;
        $this->offerType = $data['offerType'] ?? null;
        $this->description = $data['description'] ?? null;
        $this->startDateTime = $data['startDateTime'] ?? null;
        $this->endDateTime = $data['endDateTime'] ?? null;
        $this->rate = $data['rate'] ?? null;
        $this->value = $data['value'] ?? null;
        $this->term = $data['term'] ?? null;
        $this->uRL = $data['uRL'] ?? null;
        $this->amount = $data['amount'] ?? null;
        $this->fee = $data['fee'] ?? null;
    }

    /**
     * Gets accountId.
     *
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets accountId.
     *
     * @param string|null $accountId  A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setAccountId(?string $accountId): self
    {
        $this->accountId = $accountId;

        return $this;
    }

    /**
     * Gets offerId.
     *
     * @return string|null
     */
    public function getOfferId(): ?string
    {
        return $this->offerId;
    }

    /**
     * Sets offerId.
     *
     * @param string|null $offerId  A unique and immutable identifier used to identify the offer resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setOfferId(?string $offerId = null): self
    {
        $this->offerId = $offerId;

        return $this;
    }

    /**
     * Gets offerType.
     *
     * @return string|null
     */
    public function getOfferType(): ?string
    {
        return $this->offerType;
    }

    /**
     * Sets offerType.
     *
     * @param string|null $offerType  Offer type, in a coded form.
     *
     * @return $this
     */
    public function setOfferType(?string $offerType = null): self
    {
        $this->offerType = $offerType;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description  Further details of the offer.
     *
     * @return $this
     */
    public function setDescription(?string $description = null): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets startDateTime.
     *
     * @return \DateTime|null
     */
    public function getStartDateTime(): ?\DateTime
    {
        return $this->startDateTime;
    }

    /**
     * Sets startDateTime.
     *
     * @param \DateTime|null $startDateTime  Date and time at which the offer starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setStartDateTime(?\DateTime $startDateTime = null): self
    {
        $this->startDateTime = $startDateTime;

        return $this;
    }

    /**
     * Gets endDateTime.
     *
     * @return \DateTime|null
     */
    public function getEndDateTime(): ?\DateTime
    {
        return $this->endDateTime;
    }

    /**
     * Sets endDateTime.
     *
     * @param \DateTime|null $endDateTime  Date and time at which the offer ends.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setEndDateTime(?\DateTime $endDateTime = null): self
    {
        $this->endDateTime = $endDateTime;

        return $this;
    }

    /**
     * Gets rate.
     *
     * @return string|null
     */
    public function getRate(): ?string
    {
        return $this->rate;
    }

    /**
     * Sets rate.
     *
     * @param string|null $rate  Rate associated with the offer type.
     *
     * @return $this
     */
    public function setRate(?string $rate = null): self
    {
        $this->rate = $rate;

        return $this;
    }

    /**
     * Gets value.
     *
     * @return int|null
     */
    public function getValue(): ?int
    {
        return $this->value;
    }

    /**
     * Sets value.
     *
     * @param int|null $value  Value associated with the offer type.
     *
     * @return $this
     */
    public function setValue(?int $value = null): self
    {
        $this->value = $value;

        return $this;
    }

    /**
     * Gets term.
     *
     * @return string|null
     */
    public function getTerm(): ?string
    {
        return $this->term;
    }

    /**
     * Sets term.
     *
     * @param string|null $term  Further details of the term of the offer.
     *
     * @return $this
     */
    public function setTerm(?string $term = null): self
    {
        $this->term = $term;

        return $this;
    }

    /**
     * Gets uRL.
     *
     * @return string|null
     */
    public function getURL(): ?string
    {
        return $this->uRL;
    }

    /**
     * Sets uRL.
     *
     * @param string|null $uRL  URL (Uniform Resource Locator) where documentation on the offer can be found
     *
     * @return $this
     */
    public function setURL(?string $uRL = null): self
    {
        $this->uRL = $uRL;

        return $this;
    }

    /**
     * Gets amount.
     *
     * @return OBReadOffer1DataOfferInnerAmount|null
     */
    public function getAmount(): ?OBReadOffer1DataOfferInnerAmount
    {
        return $this->amount;
    }

    /**
     * Sets amount.
     *
     * @param OBReadOffer1DataOfferInnerAmount|null $amount
     *
     * @return $this
     */
    public function setAmount(?OBReadOffer1DataOfferInnerAmount $amount = null): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Gets fee.
     *
     * @return OBReadOffer1DataOfferInnerFee|null
     */
    public function getFee(): ?OBReadOffer1DataOfferInnerFee
    {
        return $this->fee;
    }

    /**
     * Sets fee.
     *
     * @param OBReadOffer1DataOfferInnerFee|null $fee
     *
     * @return $this
     */
    public function setFee(?OBReadOffer1DataOfferInnerFee $fee = null): self
    {
        $this->fee = $fee;

        return $this;
    }
}


