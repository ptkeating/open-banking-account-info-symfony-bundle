<?php
/**
 * OBParty2AddressInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBParty2AddressInner model.
 *
 * Postal address of a party.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBParty2AddressInner 
{
        /**
     * @var OBAddressTypeCode|null
     * @SerializedName("AddressType")
     * @Assert\Type("OpenAPI\Server\Model\OBAddressTypeCode")
     * @Type("OpenAPI\Server\Model\OBAddressTypeCode")
     */
    protected ?OBAddressTypeCode $addressType = null;

    /**
     * @var array|null
     * @SerializedName("AddressLine")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     * @Assert\Count(
     *   max = 5
     * )
     * @Assert\Count(
     *   min = 0
     * )
     */
    protected ?array $addressLine = null;

    /**
     * Name of a street or thoroughfare.
     *
     * @var string|null
     * @SerializedName("StreetName")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 70
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $streetName = null;

    /**
     * Number that identifies the position of a building on a street.
     *
     * @var string|null
     * @SerializedName("BuildingNumber")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 16
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $buildingNumber = null;

    /**
     * Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
     *
     * @var string|null
     * @SerializedName("PostCode")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 16
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $postCode = null;

    /**
     * Name of a built-up area, with defined boundaries, and a local government.
     *
     * @var string|null
     * @SerializedName("TownName")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 35
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $townName = null;

    /**
     * Identifies a subdivision of a country eg, state, region, county.
     *
     * @var string|null
     * @SerializedName("CountrySubDivision")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 35
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $countrySubDivision = null;

    /**
     * Nation with its own government, occupying a particular territory.
     *
     * @var string|null
     * @SerializedName("Country")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Regex("/^[A-Z]{2,2}$/")
     */
    protected ?string $country = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->addressType = $data['addressType'] ?? null;
        $this->addressLine = $data['addressLine'] ?? null;
        $this->streetName = $data['streetName'] ?? null;
        $this->buildingNumber = $data['buildingNumber'] ?? null;
        $this->postCode = $data['postCode'] ?? null;
        $this->townName = $data['townName'] ?? null;
        $this->countrySubDivision = $data['countrySubDivision'] ?? null;
        $this->country = $data['country'] ?? null;
    }

    /**
     * Gets addressType.
     *
     * @return OBAddressTypeCode|null
     */
    public function getAddressType(): ?OBAddressTypeCode
    {
        return $this->addressType;
    }

    /**
     * Sets addressType.
     *
     * @param OBAddressTypeCode|null $addressType
     *
     * @return $this
     */
    public function setAddressType(?OBAddressTypeCode $addressType = null): self
    {
        $this->addressType = $addressType;

        return $this;
    }

    /**
     * Gets addressLine.
     *
     * @return array|null
     */
    public function getAddressLine(): ?array
    {
        return $this->addressLine;
    }

    /**
     * Sets addressLine.
     *
     * @param array|null $addressLine
     *
     * @return $this
     */
    public function setAddressLine(?array $addressLine = null): self
    {
        $this->addressLine = $addressLine;

        return $this;
    }

    /**
     * Gets streetName.
     *
     * @return string|null
     */
    public function getStreetName(): ?string
    {
        return $this->streetName;
    }

    /**
     * Sets streetName.
     *
     * @param string|null $streetName  Name of a street or thoroughfare.
     *
     * @return $this
     */
    public function setStreetName(?string $streetName = null): self
    {
        $this->streetName = $streetName;

        return $this;
    }

    /**
     * Gets buildingNumber.
     *
     * @return string|null
     */
    public function getBuildingNumber(): ?string
    {
        return $this->buildingNumber;
    }

    /**
     * Sets buildingNumber.
     *
     * @param string|null $buildingNumber  Number that identifies the position of a building on a street.
     *
     * @return $this
     */
    public function setBuildingNumber(?string $buildingNumber = null): self
    {
        $this->buildingNumber = $buildingNumber;

        return $this;
    }

    /**
     * Gets postCode.
     *
     * @return string|null
     */
    public function getPostCode(): ?string
    {
        return $this->postCode;
    }

    /**
     * Sets postCode.
     *
     * @param string|null $postCode  Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
     *
     * @return $this
     */
    public function setPostCode(?string $postCode = null): self
    {
        $this->postCode = $postCode;

        return $this;
    }

    /**
     * Gets townName.
     *
     * @return string|null
     */
    public function getTownName(): ?string
    {
        return $this->townName;
    }

    /**
     * Sets townName.
     *
     * @param string|null $townName  Name of a built-up area, with defined boundaries, and a local government.
     *
     * @return $this
     */
    public function setTownName(?string $townName = null): self
    {
        $this->townName = $townName;

        return $this;
    }

    /**
     * Gets countrySubDivision.
     *
     * @return string|null
     */
    public function getCountrySubDivision(): ?string
    {
        return $this->countrySubDivision;
    }

    /**
     * Sets countrySubDivision.
     *
     * @param string|null $countrySubDivision  Identifies a subdivision of a country eg, state, region, county.
     *
     * @return $this
     */
    public function setCountrySubDivision(?string $countrySubDivision = null): self
    {
        $this->countrySubDivision = $countrySubDivision;

        return $this;
    }

    /**
     * Gets country.
     *
     * @return string|null
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets country.
     *
     * @param string|null $country  Nation with its own government, occupying a particular territory.
     *
     * @return $this
     */
    public function setCountry(?string $country): self
    {
        $this->country = $country;

        return $this;
    }
}


