<?php
/**
 * ProductDetails1
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ProductDetails1 model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ProductDetails1 
{
        /**
     * Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.  Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd  With respect to PCA products, they are segmented in relation to different markets that they wish to focus on.
     *
     * @var array|null
     * @SerializedName("Segment")
     * @Assert\All({
     *   @Assert\Choice({ "Basic", "BenefitAndReward", "CreditInterest", "Cashback", "General", "Graduate", "Other", "Overdraft", "Packaged", "Premium", "Reward", "Student", "YoungAdult", "Youth" })
     * })
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $segment = null;

    /**
     * The maximum relevant charges that could accrue as defined fully in Part 7 of the CMA order
     *
     * @var string|null
     * @SerializedName("MonthlyMaximumCharge")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Regex("/^(-?\\d{1,14}){1}(\\.\\d{1,4}){0,1}$/")
     */
    protected ?string $monthlyMaximumCharge = null;

    /**
     * Optional additional notes to supplement the Core product details
     *
     * @var array|null
     * @SerializedName("Notes")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $notes = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->segment = $data['segment'] ?? null;
        $this->monthlyMaximumCharge = $data['monthlyMaximumCharge'] ?? null;
        $this->notes = $data['notes'] ?? null;
    }

    /**
     * Gets segment.
     *
     * @return array|null
     */
    public function getSegment(): ?array
    {
        return $this->segment;
    }

    /**
     * Sets segment.
     *
     * @param array|null $segment  Market segmentation is a marketing term referring to the aggregating of prospective buyers into groups, or segments, that have common needs and respond similarly to a marketing action. Market segmentation enables companies to target different categories of consumers who perceive the full value of certain products and services differently from one another.  Read more: Market Segmentation http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd  With respect to PCA products, they are segmented in relation to different markets that they wish to focus on.
     *
     * @return $this
     */
    public function setSegment(?array $segment = null): self
    {
        $this->segment = $segment;

        return $this;
    }

    /**
     * Gets monthlyMaximumCharge.
     *
     * @return string|null
     */
    public function getMonthlyMaximumCharge(): ?string
    {
        return $this->monthlyMaximumCharge;
    }

    /**
     * Sets monthlyMaximumCharge.
     *
     * @param string|null $monthlyMaximumCharge  The maximum relevant charges that could accrue as defined fully in Part 7 of the CMA order
     *
     * @return $this
     */
    public function setMonthlyMaximumCharge(?string $monthlyMaximumCharge = null): self
    {
        $this->monthlyMaximumCharge = $monthlyMaximumCharge;

        return $this;
    }

    /**
     * Gets notes.
     *
     * @return array|null
     */
    public function getNotes(): ?array
    {
        return $this->notes;
    }

    /**
     * Sets notes.
     *
     * @param array|null $notes  Optional additional notes to supplement the Core product details
     *
     * @return $this
     */
    public function setNotes(?array $notes = null): self
    {
        $this->notes = $notes;

        return $this;
    }
}


