<?php
/**
 * OBTransaction6Detail
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBTransaction6Detail model.
 *
 * Provides further details on an entry in the report.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBTransaction6Detail 
{
        /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("AccountId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $accountId = null;

    /**
     * Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.
     *
     * @var string|null
     * @SerializedName("TransactionId")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 210
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $transactionId = null;

    /**
     * Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.
     *
     * @var string|null
     * @SerializedName("TransactionReference")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 210
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $transactionReference = null;

    /**
     * @var array|null
     * @SerializedName("StatementReference")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $statementReference = null;

    /**
     * @var OBCreditDebitCode1|null
     * @SerializedName("CreditDebitIndicator")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBCreditDebitCode1")
     * @Type("OpenAPI\Server\Model\OBCreditDebitCode1")
     */
    protected ?OBCreditDebitCode1 $creditDebitIndicator = null;

    /**
     * @var OBEntryStatus1Code|null
     * @SerializedName("Status")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBEntryStatus1Code")
     * @Type("OpenAPI\Server\Model\OBEntryStatus1Code")
     */
    protected ?OBEntryStatus1Code $status = null;

    /**
     * @var OBTransactionMutability1Code|null
     * @SerializedName("TransactionMutability")
     * @Assert\Type("OpenAPI\Server\Model\OBTransactionMutability1Code")
     * @Type("OpenAPI\Server\Model\OBTransactionMutability1Code")
     */
    protected ?OBTransactionMutability1Code $transactionMutability = null;

    /**
     * Date and time when a transaction entry is posted to an account on the account servicer&#39;s books. Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("BookingDateTime")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $bookingDateTime = null;

    /**
     * Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry. Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date. For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("ValueDateTime")
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $valueDateTime = null;

    /**
     * Further details of the transaction.  This is the transaction narrative, which is unstructured text.
     *
     * @var string|null
     * @SerializedName("TransactionInformation")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 500
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $transactionInformation = null;

    /**
     * Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.
     *
     * @var string|null
     * @SerializedName("AddressLine")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 70
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $addressLine = null;

    /**
     * @var OBActiveOrHistoricCurrencyAndAmount9|null
     * @SerializedName("Amount")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount9")
     * @Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount9")
     */
    protected ?OBActiveOrHistoricCurrencyAndAmount9 $amount = null;

    /**
     * @var OBActiveOrHistoricCurrencyAndAmount10|null
     * @SerializedName("ChargeAmount")
     * @Assert\Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount10")
     * @Type("OpenAPI\Server\Model\OBActiveOrHistoricCurrencyAndAmount10")
     */
    protected ?OBActiveOrHistoricCurrencyAndAmount10 $chargeAmount = null;

    /**
     * @var OBCurrencyExchange5|null
     * @SerializedName("CurrencyExchange")
     * @Assert\Type("OpenAPI\Server\Model\OBCurrencyExchange5")
     * @Type("OpenAPI\Server\Model\OBCurrencyExchange5")
     */
    protected ?OBCurrencyExchange5 $currencyExchange = null;

    /**
     * @var OBBankTransactionCodeStructure1|null
     * @SerializedName("BankTransactionCode")
     * @Assert\Type("OpenAPI\Server\Model\OBBankTransactionCodeStructure1")
     * @Type("OpenAPI\Server\Model\OBBankTransactionCodeStructure1")
     */
    protected ?OBBankTransactionCodeStructure1 $bankTransactionCode = null;

    /**
     * @var ProprietaryBankTransactionCodeStructure1|null
     * @SerializedName("ProprietaryBankTransactionCode")
     * @Assert\Type("OpenAPI\Server\Model\ProprietaryBankTransactionCodeStructure1")
     * @Type("OpenAPI\Server\Model\ProprietaryBankTransactionCodeStructure1")
     */
    protected ?ProprietaryBankTransactionCodeStructure1 $proprietaryBankTransactionCode = null;

    /**
     * @var OBTransactionCashBalance|null
     * @SerializedName("Balance")
     * @Assert\Type("OpenAPI\Server\Model\OBTransactionCashBalance")
     * @Type("OpenAPI\Server\Model\OBTransactionCashBalance")
     */
    protected ?OBTransactionCashBalance $balance = null;

    /**
     * @var OBMerchantDetails1|null
     * @SerializedName("MerchantDetails")
     * @Assert\Type("OpenAPI\Server\Model\OBMerchantDetails1")
     * @Type("OpenAPI\Server\Model\OBMerchantDetails1")
     */
    protected ?OBMerchantDetails1 $merchantDetails = null;

    /**
     * @var OBBranchAndFinancialInstitutionIdentification61|null
     * @SerializedName("CreditorAgent")
     * @Assert\Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification61")
     * @Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification61")
     */
    protected ?OBBranchAndFinancialInstitutionIdentification61 $creditorAgent = null;

    /**
     * @var OBCashAccount60|null
     * @SerializedName("CreditorAccount")
     * @Assert\Type("OpenAPI\Server\Model\OBCashAccount60")
     * @Type("OpenAPI\Server\Model\OBCashAccount60")
     */
    protected ?OBCashAccount60 $creditorAccount = null;

    /**
     * @var OBBranchAndFinancialInstitutionIdentification62|null
     * @SerializedName("DebtorAgent")
     * @Assert\Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification62")
     * @Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification62")
     */
    protected ?OBBranchAndFinancialInstitutionIdentification62 $debtorAgent = null;

    /**
     * @var OBCashAccount61|null
     * @SerializedName("DebtorAccount")
     * @Assert\Type("OpenAPI\Server\Model\OBCashAccount61")
     * @Type("OpenAPI\Server\Model\OBCashAccount61")
     */
    protected ?OBCashAccount61 $debtorAccount = null;

    /**
     * @var OBTransactionCardInstrument1|null
     * @SerializedName("CardInstrument")
     * @Assert\Type("OpenAPI\Server\Model\OBTransactionCardInstrument1")
     * @Type("OpenAPI\Server\Model\OBTransactionCardInstrument1")
     */
    protected ?OBTransactionCardInstrument1 $cardInstrument = null;

    /**
     * Additional information that can not be captured in the structured fields and/or any other specific block.
     *
     * @var array|null
     * @SerializedName("SupplementaryData")
     * @Assert\All({
     *   @Assert\Type("AnyType")
     * })
     * @Type("array<string, AnyType>")
     */
    protected ?array $supplementaryData = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountId = $data['accountId'] ?? null;
        $this->transactionId = $data['transactionId'] ?? null;
        $this->transactionReference = $data['transactionReference'] ?? null;
        $this->statementReference = $data['statementReference'] ?? null;
        $this->creditDebitIndicator = $data['creditDebitIndicator'] ?? null;
        $this->status = $data['status'] ?? null;
        $this->transactionMutability = $data['transactionMutability'] ?? null;
        $this->bookingDateTime = $data['bookingDateTime'] ?? null;
        $this->valueDateTime = $data['valueDateTime'] ?? null;
        $this->transactionInformation = $data['transactionInformation'] ?? null;
        $this->addressLine = $data['addressLine'] ?? null;
        $this->amount = $data['amount'] ?? null;
        $this->chargeAmount = $data['chargeAmount'] ?? null;
        $this->currencyExchange = $data['currencyExchange'] ?? null;
        $this->bankTransactionCode = $data['bankTransactionCode'] ?? null;
        $this->proprietaryBankTransactionCode = $data['proprietaryBankTransactionCode'] ?? null;
        $this->balance = $data['balance'] ?? null;
        $this->merchantDetails = $data['merchantDetails'] ?? null;
        $this->creditorAgent = $data['creditorAgent'] ?? null;
        $this->creditorAccount = $data['creditorAccount'] ?? null;
        $this->debtorAgent = $data['debtorAgent'] ?? null;
        $this->debtorAccount = $data['debtorAccount'] ?? null;
        $this->cardInstrument = $data['cardInstrument'] ?? null;
        $this->supplementaryData = $data['supplementaryData'] ?? null;
    }

    /**
     * Gets accountId.
     *
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets accountId.
     *
     * @param string|null $accountId  A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setAccountId(?string $accountId): self
    {
        $this->accountId = $accountId;

        return $this;
    }

    /**
     * Gets transactionId.
     *
     * @return string|null
     */
    public function getTransactionId(): ?string
    {
        return $this->transactionId;
    }

    /**
     * Sets transactionId.
     *
     * @param string|null $transactionId  Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.
     *
     * @return $this
     */
    public function setTransactionId(?string $transactionId = null): self
    {
        $this->transactionId = $transactionId;

        return $this;
    }

    /**
     * Gets transactionReference.
     *
     * @return string|null
     */
    public function getTransactionReference(): ?string
    {
        return $this->transactionReference;
    }

    /**
     * Sets transactionReference.
     *
     * @param string|null $transactionReference  Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.
     *
     * @return $this
     */
    public function setTransactionReference(?string $transactionReference = null): self
    {
        $this->transactionReference = $transactionReference;

        return $this;
    }

    /**
     * Gets statementReference.
     *
     * @return array|null
     */
    public function getStatementReference(): ?array
    {
        return $this->statementReference;
    }

    /**
     * Sets statementReference.
     *
     * @param array|null $statementReference
     *
     * @return $this
     */
    public function setStatementReference(?array $statementReference = null): self
    {
        $this->statementReference = $statementReference;

        return $this;
    }

    /**
     * Gets creditDebitIndicator.
     *
     * @return OBCreditDebitCode1|null
     */
    public function getCreditDebitIndicator(): ?OBCreditDebitCode1
    {
        return $this->creditDebitIndicator;
    }

    /**
     * Sets creditDebitIndicator.
     *
     * @param OBCreditDebitCode1|null $creditDebitIndicator
     *
     * @return $this
     */
    public function setCreditDebitIndicator(?OBCreditDebitCode1 $creditDebitIndicator): self
    {
        $this->creditDebitIndicator = $creditDebitIndicator;

        return $this;
    }

    /**
     * Gets status.
     *
     * @return OBEntryStatus1Code|null
     */
    public function getStatus(): ?OBEntryStatus1Code
    {
        return $this->status;
    }

    /**
     * Sets status.
     *
     * @param OBEntryStatus1Code|null $status
     *
     * @return $this
     */
    public function setStatus(?OBEntryStatus1Code $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Gets transactionMutability.
     *
     * @return OBTransactionMutability1Code|null
     */
    public function getTransactionMutability(): ?OBTransactionMutability1Code
    {
        return $this->transactionMutability;
    }

    /**
     * Sets transactionMutability.
     *
     * @param OBTransactionMutability1Code|null $transactionMutability
     *
     * @return $this
     */
    public function setTransactionMutability(?OBTransactionMutability1Code $transactionMutability = null): self
    {
        $this->transactionMutability = $transactionMutability;

        return $this;
    }

    /**
     * Gets bookingDateTime.
     *
     * @return \DateTime|null
     */
    public function getBookingDateTime(): ?\DateTime
    {
        return $this->bookingDateTime;
    }

    /**
     * Sets bookingDateTime.
     *
     * @param \DateTime|null $bookingDateTime  Date and time when a transaction entry is posted to an account on the account servicer's books. Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setBookingDateTime(?\DateTime $bookingDateTime): self
    {
        $this->bookingDateTime = $bookingDateTime;

        return $this;
    }

    /**
     * Gets valueDateTime.
     *
     * @return \DateTime|null
     */
    public function getValueDateTime(): ?\DateTime
    {
        return $this->valueDateTime;
    }

    /**
     * Sets valueDateTime.
     *
     * @param \DateTime|null $valueDateTime  Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry. Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date. For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setValueDateTime(?\DateTime $valueDateTime = null): self
    {
        $this->valueDateTime = $valueDateTime;

        return $this;
    }

    /**
     * Gets transactionInformation.
     *
     * @return string|null
     */
    public function getTransactionInformation(): ?string
    {
        return $this->transactionInformation;
    }

    /**
     * Sets transactionInformation.
     *
     * @param string|null $transactionInformation  Further details of the transaction.  This is the transaction narrative, which is unstructured text.
     *
     * @return $this
     */
    public function setTransactionInformation(?string $transactionInformation = null): self
    {
        $this->transactionInformation = $transactionInformation;

        return $this;
    }

    /**
     * Gets addressLine.
     *
     * @return string|null
     */
    public function getAddressLine(): ?string
    {
        return $this->addressLine;
    }

    /**
     * Sets addressLine.
     *
     * @param string|null $addressLine  Information that locates and identifies a specific address for a transaction entry, that is presented in free format text.
     *
     * @return $this
     */
    public function setAddressLine(?string $addressLine = null): self
    {
        $this->addressLine = $addressLine;

        return $this;
    }

    /**
     * Gets amount.
     *
     * @return OBActiveOrHistoricCurrencyAndAmount9|null
     */
    public function getAmount(): ?OBActiveOrHistoricCurrencyAndAmount9
    {
        return $this->amount;
    }

    /**
     * Sets amount.
     *
     * @param OBActiveOrHistoricCurrencyAndAmount9|null $amount
     *
     * @return $this
     */
    public function setAmount(?OBActiveOrHistoricCurrencyAndAmount9 $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Gets chargeAmount.
     *
     * @return OBActiveOrHistoricCurrencyAndAmount10|null
     */
    public function getChargeAmount(): ?OBActiveOrHistoricCurrencyAndAmount10
    {
        return $this->chargeAmount;
    }

    /**
     * Sets chargeAmount.
     *
     * @param OBActiveOrHistoricCurrencyAndAmount10|null $chargeAmount
     *
     * @return $this
     */
    public function setChargeAmount(?OBActiveOrHistoricCurrencyAndAmount10 $chargeAmount = null): self
    {
        $this->chargeAmount = $chargeAmount;

        return $this;
    }

    /**
     * Gets currencyExchange.
     *
     * @return OBCurrencyExchange5|null
     */
    public function getCurrencyExchange(): ?OBCurrencyExchange5
    {
        return $this->currencyExchange;
    }

    /**
     * Sets currencyExchange.
     *
     * @param OBCurrencyExchange5|null $currencyExchange
     *
     * @return $this
     */
    public function setCurrencyExchange(?OBCurrencyExchange5 $currencyExchange = null): self
    {
        $this->currencyExchange = $currencyExchange;

        return $this;
    }

    /**
     * Gets bankTransactionCode.
     *
     * @return OBBankTransactionCodeStructure1|null
     */
    public function getBankTransactionCode(): ?OBBankTransactionCodeStructure1
    {
        return $this->bankTransactionCode;
    }

    /**
     * Sets bankTransactionCode.
     *
     * @param OBBankTransactionCodeStructure1|null $bankTransactionCode
     *
     * @return $this
     */
    public function setBankTransactionCode(?OBBankTransactionCodeStructure1 $bankTransactionCode = null): self
    {
        $this->bankTransactionCode = $bankTransactionCode;

        return $this;
    }

    /**
     * Gets proprietaryBankTransactionCode.
     *
     * @return ProprietaryBankTransactionCodeStructure1|null
     */
    public function getProprietaryBankTransactionCode(): ?ProprietaryBankTransactionCodeStructure1
    {
        return $this->proprietaryBankTransactionCode;
    }

    /**
     * Sets proprietaryBankTransactionCode.
     *
     * @param ProprietaryBankTransactionCodeStructure1|null $proprietaryBankTransactionCode
     *
     * @return $this
     */
    public function setProprietaryBankTransactionCode(?ProprietaryBankTransactionCodeStructure1 $proprietaryBankTransactionCode = null): self
    {
        $this->proprietaryBankTransactionCode = $proprietaryBankTransactionCode;

        return $this;
    }

    /**
     * Gets balance.
     *
     * @return OBTransactionCashBalance|null
     */
    public function getBalance(): ?OBTransactionCashBalance
    {
        return $this->balance;
    }

    /**
     * Sets balance.
     *
     * @param OBTransactionCashBalance|null $balance
     *
     * @return $this
     */
    public function setBalance(?OBTransactionCashBalance $balance = null): self
    {
        $this->balance = $balance;

        return $this;
    }

    /**
     * Gets merchantDetails.
     *
     * @return OBMerchantDetails1|null
     */
    public function getMerchantDetails(): ?OBMerchantDetails1
    {
        return $this->merchantDetails;
    }

    /**
     * Sets merchantDetails.
     *
     * @param OBMerchantDetails1|null $merchantDetails
     *
     * @return $this
     */
    public function setMerchantDetails(?OBMerchantDetails1 $merchantDetails = null): self
    {
        $this->merchantDetails = $merchantDetails;

        return $this;
    }

    /**
     * Gets creditorAgent.
     *
     * @return OBBranchAndFinancialInstitutionIdentification61|null
     */
    public function getCreditorAgent(): ?OBBranchAndFinancialInstitutionIdentification61
    {
        return $this->creditorAgent;
    }

    /**
     * Sets creditorAgent.
     *
     * @param OBBranchAndFinancialInstitutionIdentification61|null $creditorAgent
     *
     * @return $this
     */
    public function setCreditorAgent(?OBBranchAndFinancialInstitutionIdentification61 $creditorAgent = null): self
    {
        $this->creditorAgent = $creditorAgent;

        return $this;
    }

    /**
     * Gets creditorAccount.
     *
     * @return OBCashAccount60|null
     */
    public function getCreditorAccount(): ?OBCashAccount60
    {
        return $this->creditorAccount;
    }

    /**
     * Sets creditorAccount.
     *
     * @param OBCashAccount60|null $creditorAccount
     *
     * @return $this
     */
    public function setCreditorAccount(?OBCashAccount60 $creditorAccount = null): self
    {
        $this->creditorAccount = $creditorAccount;

        return $this;
    }

    /**
     * Gets debtorAgent.
     *
     * @return OBBranchAndFinancialInstitutionIdentification62|null
     */
    public function getDebtorAgent(): ?OBBranchAndFinancialInstitutionIdentification62
    {
        return $this->debtorAgent;
    }

    /**
     * Sets debtorAgent.
     *
     * @param OBBranchAndFinancialInstitutionIdentification62|null $debtorAgent
     *
     * @return $this
     */
    public function setDebtorAgent(?OBBranchAndFinancialInstitutionIdentification62 $debtorAgent = null): self
    {
        $this->debtorAgent = $debtorAgent;

        return $this;
    }

    /**
     * Gets debtorAccount.
     *
     * @return OBCashAccount61|null
     */
    public function getDebtorAccount(): ?OBCashAccount61
    {
        return $this->debtorAccount;
    }

    /**
     * Sets debtorAccount.
     *
     * @param OBCashAccount61|null $debtorAccount
     *
     * @return $this
     */
    public function setDebtorAccount(?OBCashAccount61 $debtorAccount = null): self
    {
        $this->debtorAccount = $debtorAccount;

        return $this;
    }

    /**
     * Gets cardInstrument.
     *
     * @return OBTransactionCardInstrument1|null
     */
    public function getCardInstrument(): ?OBTransactionCardInstrument1
    {
        return $this->cardInstrument;
    }

    /**
     * Sets cardInstrument.
     *
     * @param OBTransactionCardInstrument1|null $cardInstrument
     *
     * @return $this
     */
    public function setCardInstrument(?OBTransactionCardInstrument1 $cardInstrument = null): self
    {
        $this->cardInstrument = $cardInstrument;

        return $this;
    }

    /**
     * Gets supplementaryData.
     *
     * @return array|null
     */
    public function getSupplementaryData(): ?array
    {
        return $this->supplementaryData;
    }

    /**
     * Sets supplementaryData.
     *
     * @param array|null $supplementaryData  Additional information that can not be captured in the structured fields and/or any other specific block.
     *
     * @return $this
     */
    public function setSupplementaryData(?array $supplementaryData = null): self
    {
        $this->supplementaryData = $supplementaryData;

        return $this;
    }
}


