<?php

/**
 * FeeChargeDetailInner1
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FeeChargeDetailInner1 model.
 *
 * Other fees/charges details
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FeeChargeDetailInner1 extends FeeChargeDetailInner
{


    /**
     * Fee/Charge Type
     *
     * @var string|null
     * @SerializedName("FeeType")
     * @Assert\NotNull()
     * @Assert\Choice({ "ServiceCAccountFee", "ServiceCAccountFeeMonthly", "ServiceCOther", "Other" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $feeType = null;



    /**
     * Rate type for Fee/Charge (where it is charged in terms of a rate rather than an amount)
     *
     * @var string|null
     * @SerializedName("FeeRateType")
     * @Assert\Choice({ "LinkedBaseRate", "Gross", "Net", "Other" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $feeRateType = null;

    /**
     * How frequently the fee/charge is applied to the account
     *
     * @var string|null
     * @SerializedName("ApplicationFrequency")
     * @Assert\NotNull()
     * @Assert\Choice({ "AccountClosing", "AccountOpening", "AcademicTerm", "ChargingPeriod", "Daily", "PerItem", "Monthly", "OnAccountAnniversary", "Other", "PerHour", "PerOccurrence", "PerSheet", "PerTransaction", "PerTransactionAmount", "PerTransactionPercentage", "Quarterly", "SixMonthly", "StatementMonthly", "Weekly", "Yearly" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $applicationFrequency = null;

    /**
     * How frequently the fee/charge is calculated
     *
     * @var string|null
     * @SerializedName("CalculationFrequency")
     * @Assert\Choice({ "AccountClosing", "AccountOpening", "AcademicTerm", "ChargingPeriod", "Daily", "PerItem", "Monthly", "OnAccountAnniversary", "Other", "PerHour", "PerOccurrence", "PerSheet", "PerTransaction", "PerTransactionAmount", "PerTransactionPercentage", "Quarterly", "SixMonthly", "StatementMonthly", "Weekly", "Yearly" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $calculationFrequency = null;







    /**
     * Details about any caps (maximum charges) that apply to a particular fee/charge
     *
     * @var array|null
     * @SerializedName("FeeChargeCap")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\FeeChargeCapInner1")
     * })
     * @Type("array<OpenAPI\Server\Model\FeeChargeCapInner1>")
     */
    protected ?array $feeChargeCap = null;
}
