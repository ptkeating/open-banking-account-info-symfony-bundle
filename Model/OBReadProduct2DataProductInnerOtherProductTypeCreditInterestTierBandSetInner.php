<?php
/**
 * OBReadProduct2DataProductInnerOtherProductTypeCreditInterestTierBandSetInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBReadProduct2DataProductInnerOtherProductTypeCreditInterestTierBandSetInner model.
 *
 * The group of tiers or bands for which credit interest can be applied.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBReadProduct2DataProductInnerOtherProductTypeCreditInterestTierBandSetInner 
{
        /**
     * The methodology of how credit interest is paid/applied. It can be:- 1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases. 2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance. 3. Whole The same interest rate is applied irrespective of the product holder&#39;s account balance
     *
     * @var string|null
     * @SerializedName("TierBandMethod")
     * @Assert\NotNull()
     * @Assert\Choice({ "INBA", "INTI", "INWH" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $tierBandMethod = null;

    /**
     * @var OBInterestCalculationMethod1Code|null
     * @SerializedName("CalculationMethod")
     * @Assert\Type("OpenAPI\Server\Model\OBInterestCalculationMethod1Code")
     * @Type("OpenAPI\Server\Model\OBInterestCalculationMethod1Code")
     */
    protected ?OBInterestCalculationMethod1Code $calculationMethod = null;

    /**
     * Describes whether accrued interest is payable only to the BCA or to another bank account
     *
     * @var string|null
     * @SerializedName("Destination")
     * @Assert\NotNull()
     * @Assert\Choice({ "INOT", "INPA", "INSC" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected ?string $destination = null;

    /**
     * @var array|null
     * @SerializedName("Notes")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected ?array $notes = null;

    /**
     * @var OBOtherCodeType10|null
     * @SerializedName("OtherCalculationMethod")
     * @Assert\Type("OpenAPI\Server\Model\OBOtherCodeType10")
     * @Type("OpenAPI\Server\Model\OBOtherCodeType10")
     */
    protected ?OBOtherCodeType10 $otherCalculationMethod = null;

    /**
     * @var OBOtherCodeType10|null
     * @SerializedName("OtherDestination")
     * @Assert\Type("OpenAPI\Server\Model\OBOtherCodeType10")
     * @Type("OpenAPI\Server\Model\OBOtherCodeType10")
     */
    protected ?OBOtherCodeType10 $otherDestination = null;

    /**
     * @var array|null
     * @SerializedName("TierBand")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\OBReadProduct2DataProductInnerOtherProductTypeCreditInterestTierBandSetInnerTierBandInner")
     * })
     * @Type("array<OpenAPI\Server\Model\OBReadProduct2DataProductInnerOtherProductTypeCreditInterestTierBandSetInnerTierBandInner>")
     * @Assert\Count(
     *   min = 1
     * )
     */
    protected ?array $tierBand = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->tierBandMethod = $data['tierBandMethod'] ?? null;
        $this->calculationMethod = $data['calculationMethod'] ?? null;
        $this->destination = $data['destination'] ?? null;
        $this->notes = $data['notes'] ?? null;
        $this->otherCalculationMethod = $data['otherCalculationMethod'] ?? null;
        $this->otherDestination = $data['otherDestination'] ?? null;
        $this->tierBand = $data['tierBand'] ?? null;
    }

    /**
     * Gets tierBandMethod.
     *
     * @return string|null
     */
    public function getTierBandMethod(): ?string
    {
        return $this->tierBandMethod;
    }

    /**
     * Sets tierBandMethod.
     *
     * @param string|null $tierBandMethod  The methodology of how credit interest is paid/applied. It can be:- 1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases. 2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance. 3. Whole The same interest rate is applied irrespective of the product holder's account balance
     *
     * @return $this
     */
    public function setTierBandMethod(?string $tierBandMethod): self
    {
        $this->tierBandMethod = $tierBandMethod;

        return $this;
    }

    /**
     * Gets calculationMethod.
     *
     * @return OBInterestCalculationMethod1Code|null
     */
    public function getCalculationMethod(): ?OBInterestCalculationMethod1Code
    {
        return $this->calculationMethod;
    }

    /**
     * Sets calculationMethod.
     *
     * @param OBInterestCalculationMethod1Code|null $calculationMethod
     *
     * @return $this
     */
    public function setCalculationMethod(?OBInterestCalculationMethod1Code $calculationMethod = null): self
    {
        $this->calculationMethod = $calculationMethod;

        return $this;
    }

    /**
     * Gets destination.
     *
     * @return string|null
     */
    public function getDestination(): ?string
    {
        return $this->destination;
    }

    /**
     * Sets destination.
     *
     * @param string|null $destination  Describes whether accrued interest is payable only to the BCA or to another bank account
     *
     * @return $this
     */
    public function setDestination(?string $destination): self
    {
        $this->destination = $destination;

        return $this;
    }

    /**
     * Gets notes.
     *
     * @return array|null
     */
    public function getNotes(): ?array
    {
        return $this->notes;
    }

    /**
     * Sets notes.
     *
     * @param array|null $notes
     *
     * @return $this
     */
    public function setNotes(?array $notes = null): self
    {
        $this->notes = $notes;

        return $this;
    }

    /**
     * Gets otherCalculationMethod.
     *
     * @return OBOtherCodeType10|null
     */
    public function getOtherCalculationMethod(): ?OBOtherCodeType10
    {
        return $this->otherCalculationMethod;
    }

    /**
     * Sets otherCalculationMethod.
     *
     * @param OBOtherCodeType10|null $otherCalculationMethod
     *
     * @return $this
     */
    public function setOtherCalculationMethod(?OBOtherCodeType10 $otherCalculationMethod = null): self
    {
        $this->otherCalculationMethod = $otherCalculationMethod;

        return $this;
    }

    /**
     * Gets otherDestination.
     *
     * @return OBOtherCodeType10|null
     */
    public function getOtherDestination(): ?OBOtherCodeType10
    {
        return $this->otherDestination;
    }

    /**
     * Sets otherDestination.
     *
     * @param OBOtherCodeType10|null $otherDestination
     *
     * @return $this
     */
    public function setOtherDestination(?OBOtherCodeType10 $otherDestination = null): self
    {
        $this->otherDestination = $otherDestination;

        return $this;
    }

    /**
     * Gets tierBand.
     *
     * @return array|null
     */
    public function getTierBand(): ?array
    {
        return $this->tierBand;
    }

    /**
     * Sets tierBand.
     *
     * @param array|null $tierBand
     *
     * @return $this
     */
    public function setTierBand(?array $tierBand): self
    {
        $this->tierBand = $tierBand;

        return $this;
    }
}


