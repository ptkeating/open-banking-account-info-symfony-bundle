<?php
/**
 * OBReadBalance1DataBalanceInner
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBReadBalance1DataBalanceInner model.
 *
 * Set of elements used to define the balance details.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBReadBalance1DataBalanceInner 
{
        /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("AccountId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $accountId = null;

    /**
     * @var OBCreditDebitCode2|null
     * @SerializedName("CreditDebitIndicator")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBCreditDebitCode2")
     * @Type("OpenAPI\Server\Model\OBCreditDebitCode2")
     */
    protected ?OBCreditDebitCode2 $creditDebitIndicator = null;

    /**
     * @var OBBalanceType1Code|null
     * @SerializedName("Type")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBBalanceType1Code")
     * @Type("OpenAPI\Server\Model\OBBalanceType1Code")
     */
    protected ?OBBalanceType1Code $type = null;

    /**
     * Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @var \DateTime|null
     * @SerializedName("DateTime")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected ?\DateTime $dateTime = null;

    /**
     * @var OBReadBalance1DataBalanceInnerAmount|null
     * @SerializedName("Amount")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerAmount")
     * @Type("OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerAmount")
     */
    protected ?OBReadBalance1DataBalanceInnerAmount $amount = null;

    /**
     * @var array|null
     * @SerializedName("CreditLine")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerCreditLineInner")
     * })
     * @Type("array<OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerCreditLineInner>")
     */
    protected ?array $creditLine = null;

    /**
     * @var OBReadBalance1DataBalanceInnerLocalAmount|null
     * @SerializedName("LocalAmount")
     * @Assert\Type("OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerLocalAmount")
     * @Type("OpenAPI\Server\Model\OBReadBalance1DataBalanceInnerLocalAmount")
     */
    protected ?OBReadBalance1DataBalanceInnerLocalAmount $localAmount = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountId = $data['accountId'] ?? null;
        $this->creditDebitIndicator = $data['creditDebitIndicator'] ?? null;
        $this->type = $data['type'] ?? null;
        $this->dateTime = $data['dateTime'] ?? null;
        $this->amount = $data['amount'] ?? null;
        $this->creditLine = $data['creditLine'] ?? null;
        $this->localAmount = $data['localAmount'] ?? null;
    }

    /**
     * Gets accountId.
     *
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets accountId.
     *
     * @param string|null $accountId  A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setAccountId(?string $accountId): self
    {
        $this->accountId = $accountId;

        return $this;
    }

    /**
     * Gets creditDebitIndicator.
     *
     * @return OBCreditDebitCode2|null
     */
    public function getCreditDebitIndicator(): ?OBCreditDebitCode2
    {
        return $this->creditDebitIndicator;
    }

    /**
     * Sets creditDebitIndicator.
     *
     * @param OBCreditDebitCode2|null $creditDebitIndicator
     *
     * @return $this
     */
    public function setCreditDebitIndicator(?OBCreditDebitCode2 $creditDebitIndicator): self
    {
        $this->creditDebitIndicator = $creditDebitIndicator;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return OBBalanceType1Code|null
     */
    public function getType(): ?OBBalanceType1Code
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param OBBalanceType1Code|null $type
     *
     * @return $this
     */
    public function setType(?OBBalanceType1Code $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets dateTime.
     *
     * @return \DateTime|null
     */
    public function getDateTime(): ?\DateTime
    {
        return $this->dateTime;
    }

    /**
     * Sets dateTime.
     *
     * @param \DateTime|null $dateTime  Indicates the date (and time) of the balance.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
     *
     * @return $this
     */
    public function setDateTime(?\DateTime $dateTime): self
    {
        $this->dateTime = $dateTime;

        return $this;
    }

    /**
     * Gets amount.
     *
     * @return OBReadBalance1DataBalanceInnerAmount|null
     */
    public function getAmount(): ?OBReadBalance1DataBalanceInnerAmount
    {
        return $this->amount;
    }

    /**
     * Sets amount.
     *
     * @param OBReadBalance1DataBalanceInnerAmount|null $amount
     *
     * @return $this
     */
    public function setAmount(?OBReadBalance1DataBalanceInnerAmount $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Gets creditLine.
     *
     * @return array|null
     */
    public function getCreditLine(): ?array
    {
        return $this->creditLine;
    }

    /**
     * Sets creditLine.
     *
     * @param array|null $creditLine
     *
     * @return $this
     */
    public function setCreditLine(?array $creditLine = null): self
    {
        $this->creditLine = $creditLine;

        return $this;
    }

    /**
     * Gets localAmount.
     *
     * @return OBReadBalance1DataBalanceInnerLocalAmount|null
     */
    public function getLocalAmount(): ?OBReadBalance1DataBalanceInnerLocalAmount
    {
        return $this->localAmount;
    }

    /**
     * Sets localAmount.
     *
     * @param OBReadBalance1DataBalanceInnerLocalAmount|null $localAmount
     *
     * @return $this
     */
    public function setLocalAmount(?OBReadBalance1DataBalanceInnerLocalAmount $localAmount = null): self
    {
        $this->localAmount = $localAmount;

        return $this;
    }
}


