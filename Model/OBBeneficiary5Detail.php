<?php
/**
 * OBBeneficiary5Detail
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OBBeneficiary5Detail model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OBBeneficiary5Detail 
{
        /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("AccountId")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $accountId = null;

    /**
     * A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.
     *
     * @var string|null
     * @SerializedName("BeneficiaryId")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 40
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $beneficiaryId = null;

    /**
     * @var OBBeneficiaryType1Code|null
     * @SerializedName("BeneficiaryType")
     * @Assert\Type("OpenAPI\Server\Model\OBBeneficiaryType1Code")
     * @Type("OpenAPI\Server\Model\OBBeneficiaryType1Code")
     */
    protected ?OBBeneficiaryType1Code $beneficiaryType = null;

    /**
     * Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor&#39;s reference or payment remittance identification should be quoted in the end-to-end transaction identification.
     *
     * @var string|null
     * @SerializedName("Reference")
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 35
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    protected ?string $reference = null;

    /**
     * Additional information that can not be captured in the structured fields and/or any other specific block.
     *
     * @var array|null
     * @SerializedName("SupplementaryData")
     * @Assert\All({
     *   @Assert\Type("AnyType")
     * })
     * @Type("array<string, AnyType>")
     */
    protected ?array $supplementaryData = null;

    /**
     * @var OBBranchAndFinancialInstitutionIdentification60|null
     * @SerializedName("CreditorAgent")
     * @Assert\Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification60")
     * @Type("OpenAPI\Server\Model\OBBranchAndFinancialInstitutionIdentification60")
     */
    protected ?OBBranchAndFinancialInstitutionIdentification60 $creditorAgent = null;

    /**
     * @var OBCashAccount50|null
     * @SerializedName("CreditorAccount")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("OpenAPI\Server\Model\OBCashAccount50")
     * @Type("OpenAPI\Server\Model\OBCashAccount50")
     */
    protected ?OBCashAccount50 $creditorAccount = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->accountId = $data['accountId'] ?? null;
        $this->beneficiaryId = $data['beneficiaryId'] ?? null;
        $this->beneficiaryType = $data['beneficiaryType'] ?? null;
        $this->reference = $data['reference'] ?? null;
        $this->supplementaryData = $data['supplementaryData'] ?? null;
        $this->creditorAgent = $data['creditorAgent'] ?? null;
        $this->creditorAccount = $data['creditorAccount'] ?? null;
    }

    /**
     * Gets accountId.
     *
     * @return string|null
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets accountId.
     *
     * @param string|null $accountId  A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setAccountId(?string $accountId = null): self
    {
        $this->accountId = $accountId;

        return $this;
    }

    /**
     * Gets beneficiaryId.
     *
     * @return string|null
     */
    public function getBeneficiaryId(): ?string
    {
        return $this->beneficiaryId;
    }

    /**
     * Sets beneficiaryId.
     *
     * @param string|null $beneficiaryId  A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner.
     *
     * @return $this
     */
    public function setBeneficiaryId(?string $beneficiaryId = null): self
    {
        $this->beneficiaryId = $beneficiaryId;

        return $this;
    }

    /**
     * Gets beneficiaryType.
     *
     * @return OBBeneficiaryType1Code|null
     */
    public function getBeneficiaryType(): ?OBBeneficiaryType1Code
    {
        return $this->beneficiaryType;
    }

    /**
     * Sets beneficiaryType.
     *
     * @param OBBeneficiaryType1Code|null $beneficiaryType
     *
     * @return $this
     */
    public function setBeneficiaryType(?OBBeneficiaryType1Code $beneficiaryType = null): self
    {
        $this->beneficiaryType = $beneficiaryType;

        return $this;
    }

    /**
     * Gets reference.
     *
     * @return string|null
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * Sets reference.
     *
     * @param string|null $reference  Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction. Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money. If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
     *
     * @return $this
     */
    public function setReference(?string $reference = null): self
    {
        $this->reference = $reference;

        return $this;
    }

    /**
     * Gets supplementaryData.
     *
     * @return array|null
     */
    public function getSupplementaryData(): ?array
    {
        return $this->supplementaryData;
    }

    /**
     * Sets supplementaryData.
     *
     * @param array|null $supplementaryData  Additional information that can not be captured in the structured fields and/or any other specific block.
     *
     * @return $this
     */
    public function setSupplementaryData(?array $supplementaryData = null): self
    {
        $this->supplementaryData = $supplementaryData;

        return $this;
    }

    /**
     * Gets creditorAgent.
     *
     * @return OBBranchAndFinancialInstitutionIdentification60|null
     */
    public function getCreditorAgent(): ?OBBranchAndFinancialInstitutionIdentification60
    {
        return $this->creditorAgent;
    }

    /**
     * Sets creditorAgent.
     *
     * @param OBBranchAndFinancialInstitutionIdentification60|null $creditorAgent
     *
     * @return $this
     */
    public function setCreditorAgent(?OBBranchAndFinancialInstitutionIdentification60 $creditorAgent = null): self
    {
        $this->creditorAgent = $creditorAgent;

        return $this;
    }

    /**
     * Gets creditorAccount.
     *
     * @return OBCashAccount50|null
     */
    public function getCreditorAccount(): ?OBCashAccount50
    {
        return $this->creditorAccount;
    }

    /**
     * Sets creditorAccount.
     *
     * @param OBCashAccount50|null $creditorAccount
     *
     * @return $this
     */
    public function setCreditorAccount(?OBCashAccount50 $creditorAccount): self
    {
        $this->creditorAccount = $creditorAccount;

        return $this;
    }
}


