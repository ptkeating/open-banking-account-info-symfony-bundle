<?php
/**
 * OBPostalAddress6Test
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * OBPostalAddress6Test Class Doc Comment
 *
 * @category    Class
 * @description Information that locates and identifies a specific address, as defined by postal services.
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\OBPostalAddress6
 */
class OBPostalAddress6Test extends TestCase
{
    protected OBPostalAddress6|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
         $this->object = $this->getMockBuilder(OBPostalAddress6::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(OBPostalAddress6::class));
        $this->assertInstanceOf(OBPostalAddress6::class, $this->object);
    }

    /**
     * Test attribute "addressType"
     *
     * @group unit
     * @small
     */
    public function testPropertyAddressType(): void
    {
        $this->markTestSkipped('Test for property addressType not implemented');
    }

    /**
     * Test attribute "department"
     *
     * @group unit
     * @small
     */
    public function testPropertyDepartment(): void
    {
        $this->markTestSkipped('Test for property department not implemented');
    }

    /**
     * Test attribute "subDepartment"
     *
     * @group unit
     * @small
     */
    public function testPropertySubDepartment(): void
    {
        $this->markTestSkipped('Test for property subDepartment not implemented');
    }

    /**
     * Test attribute "streetName"
     *
     * @group unit
     * @small
     */
    public function testPropertyStreetName(): void
    {
        $this->markTestSkipped('Test for property streetName not implemented');
    }

    /**
     * Test attribute "buildingNumber"
     *
     * @group unit
     * @small
     */
    public function testPropertyBuildingNumber(): void
    {
        $this->markTestSkipped('Test for property buildingNumber not implemented');
    }

    /**
     * Test attribute "postCode"
     *
     * @group unit
     * @small
     */
    public function testPropertyPostCode(): void
    {
        $this->markTestSkipped('Test for property postCode not implemented');
    }

    /**
     * Test attribute "townName"
     *
     * @group unit
     * @small
     */
    public function testPropertyTownName(): void
    {
        $this->markTestSkipped('Test for property townName not implemented');
    }

    /**
     * Test attribute "countrySubDivision"
     *
     * @group unit
     * @small
     */
    public function testPropertyCountrySubDivision(): void
    {
        $this->markTestSkipped('Test for property countrySubDivision not implemented');
    }

    /**
     * Test attribute "country"
     *
     * @group unit
     * @small
     */
    public function testPropertyCountry(): void
    {
        $this->markTestSkipped('Test for property country not implemented');
    }

    /**
     * Test attribute "addressLine"
     *
     * @group unit
     * @small
     */
    public function testPropertyAddressLine(): void
    {
        $this->markTestSkipped('Test for property addressLine not implemented');
    }
}
