<?php
/**
 * OverdraftFeeChargeCapInner1Test
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Account and Transaction API Specification
 *
 * Swagger for Account and Transaction API Specification
 *
 * The version of the OpenAPI document: 3.1.11
 * Contact: ServiceDesk@openbanking.org.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * OverdraftFeeChargeCapInner1Test Class Doc Comment
 *
 * @category    Class
 * @description Details about any caps (maximum charges) that apply to a particular fee/charge
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\OverdraftFeeChargeCapInner1
 */
class OverdraftFeeChargeCapInner1Test extends TestCase
{
    protected OverdraftFeeChargeCapInner1|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
         $this->object = $this->getMockBuilder(OverdraftFeeChargeCapInner1::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(OverdraftFeeChargeCapInner1::class));
        $this->assertInstanceOf(OverdraftFeeChargeCapInner1::class, $this->object);
    }

    /**
     * Test attribute "feeType"
     *
     * @group unit
     * @small
     */
    public function testPropertyFeeType(): void
    {
        $this->markTestSkipped('Test for property feeType not implemented');
    }

    /**
     * Test attribute "overdraftControlIndicator"
     *
     * @group unit
     * @small
     */
    public function testPropertyOverdraftControlIndicator(): void
    {
        $this->markTestSkipped('Test for property overdraftControlIndicator not implemented');
    }

    /**
     * Test attribute "minMaxType"
     *
     * @group unit
     * @small
     */
    public function testPropertyMinMaxType(): void
    {
        $this->markTestSkipped('Test for property minMaxType not implemented');
    }

    /**
     * Test attribute "feeCapOccurrence"
     *
     * @group unit
     * @small
     */
    public function testPropertyFeeCapOccurrence(): void
    {
        $this->markTestSkipped('Test for property feeCapOccurrence not implemented');
    }

    /**
     * Test attribute "feeCapAmount"
     *
     * @group unit
     * @small
     */
    public function testPropertyFeeCapAmount(): void
    {
        $this->markTestSkipped('Test for property feeCapAmount not implemented');
    }

    /**
     * Test attribute "cappingPeriod"
     *
     * @group unit
     * @small
     */
    public function testPropertyCappingPeriod(): void
    {
        $this->markTestSkipped('Test for property cappingPeriod not implemented');
    }

    /**
     * Test attribute "notes"
     *
     * @group unit
     * @small
     */
    public function testPropertyNotes(): void
    {
        $this->markTestSkipped('Test for property notes not implemented');
    }

    /**
     * Test attribute "otherFeeType"
     *
     * @group unit
     * @small
     */
    public function testPropertyOtherFeeType(): void
    {
        $this->markTestSkipped('Test for property otherFeeType not implemented');
    }
}
